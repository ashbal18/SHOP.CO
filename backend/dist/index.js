"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_router_1 = require("./routers/user.router");
// import { PostRouter } from "./routers/post.router";
const cors_1 = __importDefault(require("cors"));
const auth_router_1 = require("./routers/auth.router");
const path_1 = __importDefault(require("path"));
const reward_router_1 = require("./routers/reward.router");
const super_admin_router_1 = require("./routers/super-admin.router");
const store_admin_routers_1 = require("./routers/store-admin.routers");
const store_router_1 = require("./routers/store.router");
const address_router_1 = require("./routers/address.router");
const category_router_1 = require("./routers/category.router");
const product_router_1 = require("./routers/product.router");
const store_admins_routers_1 = require("./routers/store-admins.routers");
const discount_router_1 = require("./routers/discount.router");
const rajaongkir_router_1 = require("./routers/rajaongkir.router");
const transaction_router_1 = require("./routers/transaction.router");
const product2_router_1 = require("./routers/product2.router");
const user_order_router_1 = require("./routers/user-order.router");
const salesreport_router_1 = require("./routers/salesreport.router");
// import { RajaOngkirRouter } from "./routers/rajaongkir.router";
//import cron from "node-cron";
// import { OrderRouter } from "./routers/order.router";
const PORT = 8000;
const app = (0, express_1.default)();
app.use(express_1.default.json());
app.use((0, cors_1.default)());
app.get("/api", (req, res) => {
    res.status(200).send({ message: "Welcome to my API" });
});
app.use("/api/public", express_1.default.static(path_1.default.join(__dirname, "../public")));
const userRouter = new user_router_1.UserRouter();
app.use("/api/users", userRouter.getRouter());
const userorRouter = new user_order_router_1.userorderRouter();
app.use("/api/userorder", userorRouter.getRouter());
const authRouter = new auth_router_1.AuthRouter();
app.use("/api/auth", authRouter.getRouter());
const rewardRouter = new reward_router_1.RewardRouter();
app.use("/api/rewards", rewardRouter.getRouter());
const superAdminRouter = new super_admin_router_1.SuperAdminRouter();
app.use("/api/super-admin", superAdminRouter.getRouter());
const adminRouter = new store_admin_routers_1.AdminRouter();
app.use("/api/store-admin", adminRouter.getRouter());
const adminsRouter = new store_admins_routers_1.AdminsRouter();
app.use("/api/store-admins", adminsRouter.getRouter());
const addressRouter = new address_router_1.AddressRouter();
app.use("/api/address", addressRouter.getRouter());
const storeRouter = new store_router_1.StoreRouter();
app.use("/api/store", storeRouter.getRouter());
const productRouter = new product_router_1.ProductRouter();
app.use("/api/product", productRouter.getRouter());
const productRouter2 = new product2_router_1.ProductRouter2();
app.use("/api/product2", productRouter2.getRouter());
const categoryRouter = new category_router_1.CategoryRouter();
app.use("/api/category", categoryRouter.getRouter());
const discountRouter = new discount_router_1.DiscountRouter();
app.use("/api/discounts", discountRouter.getRouter());
const rajaongkirRouter = new rajaongkir_router_1.RajaOngkirRouter();
app.use("/api/rajaongkir", rajaongkirRouter.getRouter());
const transactionRouter = new transaction_router_1.TransactionRouter();
app.use("/api/transaction", transactionRouter.getRouter());
const salesReportRouter = new salesreport_router_1.SalesReportRouter();
app.use("/api/report", salesReportRouter.getRouter());
// scheduler
// cron.schedule("0 7 * * 6,0", () => {
//   console.log("Hello World");
// });
app.listen(PORT, () => {
    console.log(`Server running on : http://localhost:${PORT}/api`);
});
